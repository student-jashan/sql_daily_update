24/10/24(THURSDAY)
Topics:
1)Print the title and ratings of the movies released in 2012 whose metacritic rating is more than 60 and Domestic collections exceed 10 Crores. (Download the dataset from console)

SELECT i.title, i.rating
FROM IMDB AS i
JOIN earning AS e
ON i.movie_id = e.movie_id 
WHERE i.title LIKE '%2012%' 
AND e.Domestic > 100000000 
AND i.MetaCritic > 60;

2)Insert below student details in students table and print all data of table.

+---------+--------+-------+
| ID  |  Name       | Gender|
+---------+--------+-------+
|   3     |  Kim    |   F   |
|   4     | Molina  |   F   |
|   5     | Dev     |   M   |
+---------+--------+-------+

INSERT INTO students(ID,Name,Gender) 
VALUES
(3,'Kim','F'),
(4,'Molina','F'),
(5,'Dev','M');
SELECT*FROM students;

3)Given three tables: salesperson, company, orders.
Output all the names in the table salesperson, who didnâ€™t have sales to company 'RED'.

SELECT name
FROM Salesperson 
WHERE sales_id NOT IN 
(
    SELECT sales_id
    FROM Orders 
    WHERE com_id=1
);

4)A country is big if it has an area of bigger than 3 million square km or a population of more than 25 million.

Write a SQL solution to output big countries' name, population and area.

For example, according to the above table, we should output:

+--------------+-------------+--------------+
| name         | population  | area         |
+--------------+-------------+--------------+
| Afghanistan  | 25500100    | 652230       |
| Algeria      | 37100000    | 2381741      |
+--------------+-------------+--------------+

SELECT name,population,area
FROM World
WHERE population >25000000 OR area>3000000;

5)able: ActorDirector

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| actor_id    | int     |
| director_id | int     |
| timestamp   | int     |
+-------------+---------+

Timestamp is the primary key column for this tables
Write a SQL query for a report that provides the pairs (actor_id, director_id) where the actor have co-worked with the director at least 3 times.


SELECT actor_id,director_id 
FROM ActorDirector
GROUP BY actor_id,director_id
having count(*)>=3;

Result table:
+-------------+-------------+
| actor_id    | director_id |
+-------------+-------------+
| 1           | 1           |
+-------------+-------------+
